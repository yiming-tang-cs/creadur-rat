<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.7 (enhanced XHTML version with additional elements (used for plugin:report))-->

<plugin>
  <name>Apache Creadur Rat::Plugin4Maven</name>
  <description>A plugin for Apache Maven that runs Apache Rat
   to audit the source to be distributed.</description>
  <groupId>org.apache.rat</groupId>
  <artifactId>apache-rat-plugin</artifactId>
  <version>0.16-SNAPSHOT</version>
  <goalPrefix>apache-rat</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>check</goal>
      <description>Run Rat to perform a violation check.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>validate</phase>
      <implementation>org.apache.rat.mp.RatCheckMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>addDefaultLicenseMatchers</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to add the default list of license matchers.</description>
        </parameter>
        <parameter>
          <name>addLicenseHeaders</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to add license headers; possible values are &lt;code&gt;forced&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; (default).</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The base directory, in which to search for files.</description>
        </parameter>
        <parameter>
          <name>consoleOutput</name>
          <type>boolean</type>
          <since>0.12</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to output the names of files that have unapproved licenses to the console. Defaults to &lt;code&gt;true&lt;/code&gt; to ease builds in containers where you are unable to access rat.txt easily.</description>
        </parameter>
        <parameter>
          <name>copyrightMessage</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Copyright message to add to license headers. This option is ignored, unless &lt;code&gt;addLicenseHeaders&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;forced&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies files, which are excluded in the report. By default, no files are excluded.</description>
        </parameter>
        <parameter>
          <name>excludesFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a file, from which to read excludes. Basically, an alternative to specifying the excludes as a list. The excludesFile is assumed to be using the UFT8 character set.</description>
        </parameter>
        <parameter>
          <name>excludesFileCharset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the include files character set. Defaults to @code{${project.build.sourceEncoding}), or @code{UTF8}.</description>
        </parameter>
        <parameter>
          <name>excludeSubProjects</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to exclude subprojects. This is recommended, if you want a separate apache-rat-plugin report for each subproject.</description>
        </parameter>
        <parameter>
          <name>ignoreErrors</name>
          <type>boolean</type>
          <since>0.9</since>
          <required>false</required>
          <editable>true</editable>
          <description>Will ignore rat errors and display a log message if any. Its use is NOT RECOMMENDED, but quite convenient on occasion.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies files, which are included in the report. By default, all files are included.</description>
        </parameter>
        <parameter>
          <name>includesFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a file, from which to read includes. Basically, an alternative to specifying the includes as a list.</description>
        </parameter>
        <parameter>
          <name>includesFileCharset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the include files character set. Defaults to @code{${project.build.sourceEncoding}), or @code{UTF8}.</description>
        </parameter>
        <parameter>
          <name>licenseFamilies</name>
          <type>org.apache.rat.license.ILicenseFamily[]</type>
          <since>0.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the license families to accept.</description>
        </parameter>
        <parameter>
          <name>licenseMatchers</name>
          <type>org.apache.rat.mp.HeaderMatcherSpecification[]</type>
          <deprecated>Use &lt;code&gt;licenses&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the licenses to accept. Deprecated, use &lt;code&gt;licenses&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; instead.</description>
        </parameter>
        <parameter>
          <name>licenses</name>
          <type>org.apache.rat.analysis.IHeaderMatcher[]</type>
          <since>0.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the licenses to accept. By default, these are added to the default licenses, unless you set &lt;code&gt;addDefaultLicenseMatchers&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; to false.</description>
        </parameter>
        <parameter>
          <name>numUnapprovedLicenses</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum number of files with unapproved licenses.</description>
        </parameter>
        <parameter>
          <name>parseSCMIgnoresAsExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to parse source code management system (SCM) ignore files and use their contents as excludes. At the moment this works for the following SCMs:&lt;br /&gt;&lt;strong&gt;See also:&lt;/strong&gt; org.apache.rat.config.SourceCodeManagementSystems&lt;!-- no javadoc sites associated --&gt;</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Holds the maven-internal project to allow resolution of artifact properties during mojo runs.</description>
        </parameter>
        <parameter>
          <name>reportFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Where to store the report.</description>
        </parameter>
        <parameter>
          <name>reportStyle</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Output style of the report. Use &quot;plain&quot; (the default) for a plain text report or &quot;xml&quot; for the raw XML report. Alternatively you can give the path of an XSL transformation that will be applied on the raw XML to produce the report written to the output file.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>0.11</since>
          <required>false</required>
          <editable>true</editable>
          <description>Will skip the plugin execution, e.g. for technical builds that do not take license compliance into account.</description>
        </parameter>
        <parameter>
          <name>useDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the default excludes when scanning for files. The default excludes are: 
&lt;ul&gt;
 &lt;li&gt;meta data files for source code management / revision control systems, see &lt;code&gt;org.apache.rat.config.SourceCodeManagementSystems&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt;&lt;/li&gt;
 &lt;li&gt;temporary files used by Maven, see &lt;a href=&quot;#useMavenDefaultExcludes&quot;&gt;useMavenDefaultExcludes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;configuration files for Eclipse, see &lt;a href=&quot;#useEclipseDefaultExcludes&quot;&gt;useEclipseDefaultExcludes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;configuration files for IDEA, see &lt;a href=&quot;#useIdeaDefaultExcludes&quot;&gt;useIdeaDefaultExcludes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>useEclipseDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the Eclipse specific default excludes when scanning for files. Eclipse specific default excludes are given by the constant ECLIPSE_DEFAULT_EXCLUDES: The &lt;code&gt;.classpath&lt;/code&gt; and &lt;code&gt;.project&lt;/code&gt; files, the &lt;code&gt;.settings&lt;/code&gt; directory, and so on.</description>
        </parameter>
        <parameter>
          <name>useIdeaDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the IDEA specific default excludes when scanning for files. IDEA specific default excludes are given by the constant IDEA_DEFAULT_EXCLUDES: The &lt;code&gt;*.iml&lt;/code&gt;, &lt;code&gt;*.ipr&lt;/code&gt; and &lt;code&gt;*.iws&lt;/code&gt; files and the &lt;code&gt;.idea&lt;/code&gt; directory.</description>
        </parameter>
        <parameter>
          <name>useMavenDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the Maven specific default excludes when scanning for files. Maven specific default excludes are given by the constant MAVEN_DEFAULT_EXCLUDES: The &lt;code&gt;target&lt;/code&gt; directory, the &lt;code&gt;cobertura.ser&lt;/code&gt; file, and so on.</description>
        </parameter>
      </parameters>
      <configuration>
        <addDefaultLicenseMatchers implementation="boolean" default-value="true">${rat.addDefaultLicenseMatchers}</addDefaultLicenseMatchers>
        <addLicenseHeaders implementation="java.lang.String" default-value="false">${rat.addLicenseHeaders}</addLicenseHeaders>
        <basedir implementation="java.io.File" default-value="${basedir}">${rat.basedir}</basedir>
        <consoleOutput implementation="boolean" default-value="true">${rat.consoleOutput}</consoleOutput>
        <copyrightMessage implementation="java.lang.String">${rat.copyrightMessage}</copyrightMessage>
        <excludesFile implementation="java.lang.String">${rat.excludesFile}</excludesFile>
        <excludesFileCharset implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${rat.excludesFileCharset}</excludesFileCharset>
        <excludeSubProjects implementation="boolean" default-value="true">${rat.excludeSubprojects}</excludeSubProjects>
        <ignoreErrors implementation="boolean" default-value="false">${rat.ignoreErrors}</ignoreErrors>
        <includesFile implementation="java.lang.String">${rat.includesFile}</includesFile>
        <includesFileCharset implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${rat.includesFileCharset}</includesFileCharset>
        <numUnapprovedLicenses implementation="int" default-value="0">${rat.numUnapprovedLicenses}</numUnapprovedLicenses>
        <parseSCMIgnoresAsExcludes implementation="boolean" default-value="true">${rat.parseSCMIgnoresAsExcludes}</parseSCMIgnoresAsExcludes>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <reportFile implementation="java.io.File" default-value="${project.build.directory}/rat.txt">${rat.outputFile}</reportFile>
        <reportStyle implementation="java.lang.String" default-value="plain">${rat.outputStyle}</reportStyle>
        <skip implementation="boolean" default-value="false">${rat.skip}</skip>
        <useDefaultExcludes implementation="boolean" default-value="true">${rat.useDefaultExcludes}</useDefaultExcludes>
        <useEclipseDefaultExcludes implementation="boolean" default-value="true">${rat.useEclipseDefaultExcludes}</useEclipseDefaultExcludes>
        <useIdeaDefaultExcludes implementation="boolean" default-value="true">${rat.useIdeaDefaultExcludes}</useIdeaDefaultExcludes>
        <useMavenDefaultExcludes implementation="boolean" default-value="true">${rat.useMavenDefaultExcludes}</useMavenDefaultExcludes>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on apache-rat-plugin.&lt;br /&gt; Call &lt;code&gt;mvn apache-rat:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.rat.apache_rat_plugin.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>rat</goal>
      <description>Generates a report with Rat&apos;s output.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.rat.mp.RatReportMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>addDefaultLicenseMatchers</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to add the default list of license matchers.</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The base directory, in which to search for files.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies files, which are excluded in the report. By default, no files are excluded.</description>
        </parameter>
        <parameter>
          <name>excludesFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a file, from which to read excludes. Basically, an alternative to specifying the excludes as a list. The excludesFile is assumed to be using the UFT8 character set.</description>
        </parameter>
        <parameter>
          <name>excludesFileCharset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the include files character set. Defaults to @code{${project.build.sourceEncoding}), or @code{UTF8}.</description>
        </parameter>
        <parameter>
          <name>excludeSubProjects</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to exclude subprojects. This is recommended, if you want a separate apache-rat-plugin report for each subproject.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies files, which are included in the report. By default, all files are included.</description>
        </parameter>
        <parameter>
          <name>includesFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies a file, from which to read includes. Basically, an alternative to specifying the includes as a list.</description>
        </parameter>
        <parameter>
          <name>includesFileCharset</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the include files character set. Defaults to @code{${project.build.sourceEncoding}), or @code{UTF8}.</description>
        </parameter>
        <parameter>
          <name>inputEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Specifies the input encoding.</description>
        </parameter>
        <parameter>
          <name>licenseFamilies</name>
          <type>org.apache.rat.license.ILicenseFamily[]</type>
          <since>0.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the license families to accept.</description>
        </parameter>
        <parameter>
          <name>licenseMatchers</name>
          <type>org.apache.rat.mp.HeaderMatcherSpecification[]</type>
          <deprecated>Use &lt;code&gt;licenses&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the licenses to accept. Deprecated, use &lt;code&gt;licenses&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; instead.</description>
        </parameter>
        <parameter>
          <name>licenses</name>
          <type>org.apache.rat.analysis.IHeaderMatcher[]</type>
          <since>0.8</since>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the licenses to accept. By default, these are added to the default licenses, unless you set &lt;code&gt;addDefaultLicenseMatchers&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt; to false.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local repository.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The output directory for the report. Note that this parameter is only evaluated if the goal is run directly from the command line. If the goal is run indirectly as part of a site generation, the output directory configured in the Maven Site Plugin is used instead.</description>
        </parameter>
        <parameter>
          <name>outputEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>Specifies the output encoding.</description>
        </parameter>
        <parameter>
          <name>parseSCMIgnoresAsExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to parse source code management system (SCM) ignore files and use their contents as excludes. At the moment this works for the following SCMs:&lt;br /&gt;&lt;strong&gt;See also:&lt;/strong&gt; org.apache.rat.config.SourceCodeManagementSystems&lt;!-- no javadoc sites associated --&gt;</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Holds the maven-internal project to allow resolution of artifact properties during mojo runs.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List&lt;org.apache.maven.artifact.repository.ArtifactRepository&gt;</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories used for the project.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>0.11</since>
          <required>false</required>
          <editable>true</editable>
          <description>Will skip the plugin execution, e.g. for technical builds that do not take license compliance into account.</description>
        </parameter>
        <parameter>
          <name>useDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the default excludes when scanning for files. The default excludes are: 
&lt;ul&gt;
 &lt;li&gt;meta data files for source code management / revision control systems, see &lt;code&gt;org.apache.rat.config.SourceCodeManagementSystems&lt;/code&gt;&lt;!-- no javadoc sites associated --&gt;&lt;/li&gt;
 &lt;li&gt;temporary files used by Maven, see &lt;a href=&quot;#useMavenDefaultExcludes&quot;&gt;useMavenDefaultExcludes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;configuration files for Eclipse, see &lt;a href=&quot;#useEclipseDefaultExcludes&quot;&gt;useEclipseDefaultExcludes&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;configuration files for IDEA, see &lt;a href=&quot;#useIdeaDefaultExcludes&quot;&gt;useIdeaDefaultExcludes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>useEclipseDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the Eclipse specific default excludes when scanning for files. Eclipse specific default excludes are given by the constant ECLIPSE_DEFAULT_EXCLUDES: The &lt;code&gt;.classpath&lt;/code&gt; and &lt;code&gt;.project&lt;/code&gt; files, the &lt;code&gt;.settings&lt;/code&gt; directory, and so on.</description>
        </parameter>
        <parameter>
          <name>useIdeaDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the IDEA specific default excludes when scanning for files. IDEA specific default excludes are given by the constant IDEA_DEFAULT_EXCLUDES: The &lt;code&gt;*.iml&lt;/code&gt;, &lt;code&gt;*.ipr&lt;/code&gt; and &lt;code&gt;*.iws&lt;/code&gt; files and the &lt;code&gt;.idea&lt;/code&gt; directory.</description>
        </parameter>
        <parameter>
          <name>useMavenDefaultExcludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to use the Maven specific default excludes when scanning for files. Maven specific default excludes are given by the constant MAVEN_DEFAULT_EXCLUDES: The &lt;code&gt;target&lt;/code&gt; directory, the &lt;code&gt;cobertura.ser&lt;/code&gt; file, and so on.</description>
        </parameter>
      </parameters>
      <configuration>
        <addDefaultLicenseMatchers implementation="boolean" default-value="true">${rat.addDefaultLicenseMatchers}</addDefaultLicenseMatchers>
        <basedir implementation="java.io.File" default-value="${basedir}">${rat.basedir}</basedir>
        <excludesFile implementation="java.lang.String">${rat.excludesFile}</excludesFile>
        <excludesFileCharset implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${rat.excludesFileCharset}</excludesFileCharset>
        <excludeSubProjects implementation="boolean" default-value="true">${rat.excludeSubprojects}</excludeSubProjects>
        <includesFile implementation="java.lang.String">${rat.includesFile}</includesFile>
        <includesFileCharset implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${rat.includesFileCharset}</includesFileCharset>
        <inputEncoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</inputEncoding>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <outputDirectory implementation="java.io.File" default-value="${project.reporting.outputDirectory}"/>
        <outputEncoding implementation="java.lang.String" default-value="${project.reporting.outputEncoding}">${outputEncoding}</outputEncoding>
        <parseSCMIgnoresAsExcludes implementation="boolean" default-value="true">${rat.parseSCMIgnoresAsExcludes}</parseSCMIgnoresAsExcludes>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <skip implementation="boolean" default-value="false">${rat.skip}</skip>
        <useDefaultExcludes implementation="boolean" default-value="true">${rat.useDefaultExcludes}</useDefaultExcludes>
        <useEclipseDefaultExcludes implementation="boolean" default-value="true">${rat.useEclipseDefaultExcludes}</useEclipseDefaultExcludes>
        <useIdeaDefaultExcludes implementation="boolean" default-value="true">${rat.useIdeaDefaultExcludes}</useIdeaDefaultExcludes>
        <useMavenDefaultExcludes implementation="boolean" default-value="true">${rat.useMavenDefaultExcludes}</useMavenDefaultExcludes>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.doxia.siterenderer.Renderer</role>
          <field-name>siteRenderer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.doxia.tools.SiteTool</role>
          <field-name>siteTool</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.rat</groupId>
      <artifactId>apache-rat-core</artifactId>
      <type>jar</type>
      <version>0.16-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.rat</groupId>
      <artifactId>apache-rat-api</artifactId>
      <type>jar</type>
      <version>0.16-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <type>jar</type>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.22</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <type>jar</type>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-core</artifactId>
      <type>jar</type>
      <version>1.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-logging-api</artifactId>
      <type>jar</type>
      <version>1.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.5.13</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.4.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-decoration-model</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <type>jar</type>
      <version>1.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-integration-tools</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-i18n</artifactId>
      <type>jar</type>
      <version>1.0-beta-10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-skin-model</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml5</artifactId>
      <type>jar</type>
      <version>1.11.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-tools</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>commons-chain</groupId>
      <artifactId>commons-chain</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>3.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.5.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.12.0</version>
    </dependency>
  </dependencies>
</plugin>